<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Review">

	<!-- mypage-mapper.xml -->
  	<!-- 내가 작성한 리뷰 -->
  	<select id="classReview" resultType="kh.spring.DTO.ReviewDTO">
  		select * from class_review where std_id = #{value} and state = 0 order by review_seq desc
  	</select>

	<!-- 내가 등록한 클래스의 리뷰 모두 보기 -->
  	<select id="allClassReview" resultType="kh.spring.DTO.ReviewDTO">
  		select * from class_review where parent_seq = #{value} and state = 0 order by review_seq desc
  	</select>
  	
  	<!-- 내가 등록한 클래스의 리뷰수, 별점 평균 가져오기 -->
  	<select id="reviewdetail" resultType="map">
  		select count (*) "all", nvl(avg(stars),0) "avgstar" from class_review where parent_seq = #{value}
  	</select>
  	
  	
  	
  	<!-- 클래스 관련 -->
  	
  	<insert id="insert">
		insert into class_review values ('cr'||review_seq.nextval, #{std_id}, ${stars}, 
		#{contents}, #{sys_name}, default, 0,0, #{parent_seq})
	</insert>
	
	<select id="writeOrNot" resultType="Integer">
		select count(*) from class_review where std_id=#{std_id} and parent_seq=#{parent_seq}
	</select>
	
	<select id="selectByPSeq" resultType="map">
		select class_review.*,nickname,profile_img 
		from class_review join member on std_id = email 
		where parent_seq=#{parent_seq}
		order by write_date desc
	</select>
	
	<select id="selectByPSeqId" resultType="map">
		select sorted.*,goodSorted.* 
		from 
		    (select class_review.*,nickname,profile_img 
		    from class_review join member on std_id = email 
		    where parent_seq=#{parent_seq})sorted
		left outer join  
		    (select like_seq,parent_seq from good where email=#{std_id})goodSorted
		on (sorted.review_seq=goodSorted.parent_seq)
		order by write_date desc
	</select>
	
	<select id="checkStars" resultType="map">
		select count(*)as reviews, sum(stars)as stars
		from class_review where parent_seq=#{parent_seq} group by parent_seq
	</select>
	
	<update id="modify">
		update class_review set stars=${stars}, contents=#{contents}, sys_name=#{sys_name}
		where review_seq=#{review_seq}
	</update>
	
	<delete id="delete">
		delete from class_review where review_seq=#{review_seq}
	</delete>
	
	<update id="addLike">
		update class_review set like_count=like_count+1 where review_seq=#{review_seq}
	</update>
	
	<update id="subLike">
		update class_review set like_count=like_count-1 where review_seq=#{review_seq}
	</update>
	
	<select id="getLikeCount" resultType="Integer">
		select like_count from class_review where review_seq=#{review_seq}
	</select>
  	
</mapper>