<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Chat">

	<!-- 채팅 내역 삽입 -->
	<insert id="insert">
		insert into chat values(#{room},#{message},#{nickname},#{write_date},default)
	</insert> 
	
	
		<!-- 채팅방  불러오기 -->
	<select id="selectChatRoom" resultType="kh.spring.DTO.ChatRoomDTO">  		
select distinct r.room ,r.nickname,last_value(c.message) over (partition by c.room order by c.write_date rows between unbounded PRECEDING AND UNBOUNDED FOLLOWING) as message
,last_value(c.write_date) over  (partition by c.room order by c.write_date rows between unbounded PRECEDING AND UNBOUNDED FOLLOWING) as write_date
,(select nickname from chat_room where nickname !=#{value} and room = r.room) as roomname 
,(select sum(readok) from chat where room = r.room and nickname != #{value}) as readok
,(select profile_img from member where nickname =(select nickname from chat_room where nickname !=#{value} and  room=r.room)) as profile_img
from  chat_room r,chat c where  r.room = c.room(+) and r.nickname =#{value} order by write_date desc

		
  		
  	</select>
	
	<!-- 방별 채팅 내역 불러오기 -->
	<select id="selectRoom" resultType="kh.spring.DTO.ChatDTO">
  		select c.room , c.message,c.nickname,c.write_date,c.readok,(select profile_img from member where nickname = c.nickname) as profile_img from chat c where room  = #{value}
  	</select>
	
	
	
	
	<insert id="insertSearch">
		<selectKey order="BEFORE" keyProperty="room" resultType="int">
  			select room.nextval from dual
  		</selectKey>
		INSERT INTO chat_room (room, nickname)
		SELECT #{room}, #{invite_nickname} FROM DUAL
		UNION ALL 
		SELECT #{room}, #{my_nickname} FROM DUAL
	</insert>
	
	<update id="update_readok">
		UPDATE chat SET readok = null WHERE room =#{room} and nickname != #{nickname}
	</update>
	
	
	<select id="pnav_readok" resultType="int">
		select nvl(sum(distinct (select sum(readok) from chat where room = r.room and nickname != #{nickname})),0) as readok
from  chat_room r,chat c where  r.room = c.room(+) and r.nickname =#{nickname} order by readok desc
	</select>
	
	<select id="autosearch" resultType="kh.spring.DTO.MemberDTO">
	select nickname from member where nickname != #{mynickname} and (FN_GET_DIV_KO_CHAR(nickname) like '%${nickname}%' or nickname like '%${nickname}%')
	</select>
	
</mapper>